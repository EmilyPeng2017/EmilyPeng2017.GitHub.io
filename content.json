{"posts":[{"title":"0_3D-printed PDMS&#x2F;Graphene sensors with tunable sensitivity","text":"🚀 3D-Printed PDMS/Graphene Sensors with Tunable Sensitivity 🗓 Published on: Dec. 2024📚 Journal/Conference: Advanced Electron Materials 🔍 AbstractThis study introduces PDMS/Graphene composites with high graphene content, formulated into printing ink for the fabrication of tunable multilayer pressure sensors via 3D printing. These sensors enable customizable conductivity, layer thickness, and sensor dimensions, paving the way for advanced applications in flexible electronics. ❓ Research GapFlexible pressure sensors have seen significant advancements, particularly through material optimization and innovative 3D printing techniques. However: ⚡ Most studies focus on low graphene content composites. 🔧 Few have explored tunable sensors with adjustable properties like conductivity and layer structure. 🚫 A need remains for high graphene content composites for enhanced functionality. 💡 Key Insights🌟 Edge Functionalized Expanded Graphene (EFXG)EFXG, derived from expanded graphite, exhibits: ✅ High solvent dispersibility (100 mg/ml). 🔬 Excellent potential for enhancing composite properties in 3D printing applications. ⚙️ Methods🛠 ProblemIncorporating graphene into Sylgard 184 (a PDMS material) during simultaneous mixing of all components led to poor crosslinking when graphene content exceeded 5 wt.%. 🧪 SolutionA two-step process was developed: 🔄 Mixing and Pre-Crosslinking: Combine Sylgard 184 prepolymer and initiator, then heat at 60°C for 1 hour to initiate crosslinking. ➕ Graphene Addition: Introduce graphene post-initiation to reduce its hindering effect on the crosslinking process. 📊 Results 📏 Printability Limitation: Graphene content exceeding 12% caused unprintable viscosity levels. ⚡ High Conductivity: Composites with 60% graphene achieved superior electrical performance. 🎨 Questions for myself What is Fourier Transform Infrared (FTIR) and Raman Spectroscopy used for? FTIR: A technique used to identify organic, polymeric, and some inorganic materials by measuring how different wavelengths of infrared light are absorbed by the material, providing information about molecular bonds and functional groups. Raman Spectroscopy: Complements FTIR by measuring inelastic scattering of light to identify vibrational modes of molecules, providing insights into molecular structures, crystallinity, and chemical composition. What is Newtonian behavior? Newtonian Behavior: Refers to fluids whose viscosity remains constant regardless of the applied shear rate or stress. Examples include water and most simple oils. What is the relationship between viscosity and shear rate? For Newtonian fluids, viscosity is constant and independent of shear rate. For non-Newtonian fluids, viscosity changes with shear rate: Shear-thinning (pseudoplastic): Viscosity decreases as shear rate increases (e.g., ketchup). Shear-thickening (dilatant): Viscosity increases as shear rate increases (e.g., cornstarch in water). What is viscoelasticity? What is loss modulus and storage modulus? Viscoelasticity: A material property where the substance exhibits both viscous (fluid-like) and elastic (solid-like) behavior under deformation. Loss Modulus (G’’): Represents the energy dissipated as heat (viscous component). Storage Modulus (G’): Represents the energy stored and recovered per cycle (elastic component). What is the recovery behavior of printing ink under stress? Is it necessary to test all the above properties? Recovery Behavior: Refers to the ability of ink to regain its original structure after stress is removed, crucial for maintaining print quality during and after extrusion. Testing recovery behavior helps evaluate print fidelity. Testing all properties depends on the application requirements. For high-precision applications, it’s often necessary to test rheological and viscoelastic properties. What microscopy and morphology tests have they done? Common techniques include Scanning Electron Microscopy (SEM) for surface topography and structural details, and Atomic Force Microscopy (AFM) for nanoscale surface characterization. Additional tests may involve Optical Microscopy and Transmission Electron Microscopy (TEM) for detailed internal morphology. What is gauge factor? Gauge Factor (GF): The ratio of relative change in electrical resistance to the mechanical strain applied to a material. It’s a key parameter for evaluating the sensitivity of strain sensors. 🗣 DiscussionThe temperature-induced crosslinking approach effectively addresses challenges posed by high graphene content. This study demonstrates how tailored 3D-printed composites can unlock new possibilities in flexible pressure sensor design. 🌟 Personal InsightsThis paper inspired me to think about the balance between material composition and manufacturing techniques. It aligns closely with my research interests in sensor innovation and flexible electronics, providing a foundation for future exploration. 📖 References Chen, Chong‐You, et al. “3D‐Printed PDMS/Graphene Sensors with Tunable Sensitivity via Temperature‐Induced Crosslinking for Pressure Applications.” Advanced Electronic Materials (2024): 2400653, doi: 10.1002/aelm.202400653","link":"/2025/01/03/0-3D-printed-PDMS-Graphene-sensors-with-tunable-sensitivity/"},{"title":"1_Multimaterial Cryogenic Printing of Three-Dimensional Soft Hydrogel Machines","text":"🚀 Multimaterial Cryogenic Printing of Three-Dimensional Soft Hydrogel Machines 🗓 Published on: January 2025📚 Journal/Conference: Nature Communications 🔍 AbstractThis study introduces a novel Multimaterial Cryogenic Printing (MCP) technique to fabricate soft hydrogel machines with intricate architectures and robust multimaterial interfaces. MCP enables precise control over material properties and interface integrity, paving the way for next-generation applications in soft robotics and wearable devices. Figure 1: Schematic diagram of the MCP technique used in this study. 💡 Key Insights🌟 Multimaterial Cryogenic Printing Phase Transition Mechanism: Step 1: Instant freezing of hydrogel precursors through water-to-ice phase transition (-30°C to -10°C), locking molecular configurations. Step 2: Controlled ice-to-water melting initiates chemical cross-linking at the ice-water interface. Kinetic Validation and Modeling: Developed a theoretical model to describe the relationship between printed linewidth (d) and extrusion flow (Q) for optimized control. 🎨 Demonstration and Applications1. Printing Performance: High precision achieved for complex multimaterial designs. Stability maintained across diverse hydrogel compositions. 2. Multimaterial 3D Hydrogel Architectures: Robust bonding between materials demonstrated. Achieved intricate shapes for advanced soft robotic components. 3. All-Printed, All-Hydrogel Soft Machines: Fully functional machines with integrated sensory and actuation capabilities. Applications include biomimetic devices and wearable systems. ⚙️ MethodsExperimental Setup Utilized a customized cryogenic printer with temperature-controlled stages. Hydrogel precursors prepared using biocompatible polymers and additives. Key Parameters Temperature range: -30°C to -10°C. Material extrusion speed and flow rates optimized for multimaterial integration. 📊 Results 📏 Printability Limitations: Graphene content exceeding 12% rendered inks too viscous for extrusion. ⚡ Electrical Performance: Graphene-enhanced hydrogels with 60% content exhibited exceptional conductivity. 📐 Structural Precision: Achieved linewidth variations within ±10 µm, showcasing remarkable accuracy. 🗣 DiscussionStrengths: Innovative phase-transition-driven fabrication enables multimaterial integration. Potential to revolutionize soft robotics and tissue engineering. Challenges: Viscosity constraints limit material diversity. Long-term stability of printed structures in dynamic environments needs further exploration. 🌟 Personal InsightsTakeaways: MCP is a game-changer for creating multifunctional soft machines. Integration of conductive materials expands the utility of hydrogels in wearable electronics. Future Directions: Explore scalability of MCP for industrial applications. Investigate potential for bioprinting applications in regenerative medicine. 📖 ReferencesLi, J., Cao, J., Bian, R., Wan, R., Zhu, X., Lu, B., &amp; Gu, G. (2025). Multimaterial cryogenic printing of three-dimensional soft hydrogel machines. Nature Communications, 16(1), 185, DOI: 10.1038/s41467-024-55323-6","link":"/2025/01/04/1-Multimaterial-cryogenic-printing-of-three-dimensional-soft-hydrogel-machines/"},{"title":"Breathe and Allow Things to Pass","text":"You will continue to suffer if you have an emotional reaction to everything that is said to you. True power is sitting back and observing things with logic. True power is restraint. If words control you that means everyone else can control you. Breathe and allow things to pass.","link":"/2024/12/29/Breathe-and-Allow-Things-to-Pass/"},{"title":"ML-Ch1-The Machine Learning Landscape","text":"🚀 IntroductionWelcome to [this blog series](tags/Machine Learning), where I document my journey through the acclaimed book Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow by Aurélien Géron. This book is a treasure trove for anyone eager to build practical machine learning and deep learning skills using Python libraries like Scikit-Learn, Keras, and TensorFlow. My goal is to: Understand and implement the algorithms discussed in the book. Apply these algorithms to solve real-world problems (haha, of course related to my research, stay tuned!!😁). Each post in this series will explore a specific chapter or concept, enriched with: Practical code examples 🖥️ Key insights 💡 Lessons learned along the way 🛠️ 📝 Key TakeawaysWhen is Machine Learning particularly useful?Machine learning shines in the following scenarios: 1️⃣ Problems with complex or variable rulesWhen existing solutions require: Extensive fine-tuning Long, hard-to-maintain rule sets 2️⃣ Challenges where traditional methods failWhen conventional programming approaches struggle to deliver a good solution. 3️⃣ Dynamic or fluctuating environmentsWhen systems need to adapt to: Changing conditions Evolving data patterns 4️⃣ Analyzing complex or massive datasetsMachine learning can extract meaningful insights from: Large volumes of data 📊 Highly intricate problem domains 🌐 📚 Types of Machine Learning SystemsTraining SupervisionClassifying machine learning systems based on how they are supervised during training: Supervised Learning Principle: The training set includes the desired solutions, called labels. Examples: A labeled training set for spam classification. Predicting a target numeric value (a regression problem). Unsupervised Learning Principle: The training data is unlabeled, and the system learns without a teacher. Examples: Clustering algorithms to detect groups of similar blog visitors. Visualization algorithms that process complex unlabeled data into 2D/3D plots. Anomaly detection. Association rule learning: Discovering interesting relations between attributes in large datasets. Semi-Supervised Learning Principle: Combines a few labeled instances with a large number of unlabeled ones, reducing the cost and effort of labeling. Examples: Some photo-hosting services. Algorithms that blend supervised and unsupervised techniques. Self-Supervised Learning Principle: Generates labeled data from an unlabeled dataset, enabling supervised learning techniques to be applied. Examples: Repairing damaged images or erasing unwanted objects from pictures. Reinforcement Learning Principle: An agent learns by interacting with the environment, performing actions, and receiving rewards or penalties. Examples: Robots learning how to walk. DeepMind’s AlphaGo. Batch vs. Online LearningClassifying systems based on whether they learn incrementally from incoming data: Batch Learning Principle: Requires all data at once; cannot learn incrementally. Key Features: Also called offline learning: Trained first, then deployed without further learning. Pros: Simple and often effective. Cons: Time-intensive and resource-heavy. Online Learning Principle: Learns incrementally by sequentially processing data (individually or in mini-batches). Key Features: Pros: Adapts quickly to changing environments; works on systems with limited resources. Cons: Prone to degradation if fed with poor-quality data. Generalization ApproachesInstance-Based Learning Principle: Memorizes examples and generalizes to new cases using similarity measures. Model-Based Learning Principle: Builds a model of the examples and uses it for predictions. 🎯 Main Challenges in Machine Learning Insufficient Training Data: Small datasets may not represent the problem well. Nonrepresentative Data: The data may fail to capture the true distribution. Poor-Quality Data: Cleaning the training data can greatly improve results. Irrelevant Features: Feature selection is crucial for model success. Overfitting: The model performs well on training data but poorly on unseen data. Underfitting: The model fails to capture the complexity of the data. 🔍 Testing and Validating Models Data Splitting: Divide data into training and test sets. Hyperparameter Tuning and Model Selection: Fine-tune parameters to improve performance. No Free Lunch Theorem If no assumptions are made about the data, there’s no reason to prefer one model over another.","link":"/2025/01/01/ML-Ch1-The-Machine-Learning-Landscape/"},{"title":"Regulating Emotions: Invasive or Non-invasive?","text":"This month, I attended the 21st International Conference on Embedded Wireless Systems and Networks (EWSN’24) in Abu Dhabi. It was quite an eventful experience for several reasons: 1. A Challenging Business TripThis was my first time traveling for work with a colleague, and it made me realize how much I still need to improve when working alongside others. The trip wasn’t without its challenges, my colleague had a high fever during the conference, and I experienced acclimatization issues from the second day, which left me vomiting the entire night. After returning to Belgium, I came down with a high fever for two days, during which I was bedridden and barely conscious. Ending the year in such a way was definitely a unique experience, though not one I’d want to repeat! 2. Exploring Abu DhabiDespite the challenges, I managed to enjoy some of Abu Dhabi’s highlights. I saw a stunning desert sunset, went on a desert safari, rode a camel, and visited the breathtaking Sheikh Zayed Mosque. However, I realized I’m a bit of a sentimental traveler. I always feel something is missing when I can’t share these experiences with my husband or close friends. That said, Abu Dhabi is a fantastic place to visit, and I found myself wishing several times that my husband could have been there to experience it with me. 3. Thoughts on the Conference As a relatively new researcher, every conference I attend leaves me with a strong urge to return to my lab and dive into experiments. At times, I find the social aspects of these events overwhelming or even somewhat meaningless because I feel I’m not yet strong enough to collaborate effectively with others. A voice in my head constantly tells me, “Work harder, Emily!”. AI and machine learning dominated much of the research presented at the conference, which initially felt discouraging since these aren’t my areas of expertise. However, I’ve resolved not to fall behind. If AI is a valuable tool, I need to familiarize myself with it and find ways to integrate it into my work. As a first step, I’ve added “learning machine learning” to my 2025 to-do list, and I’m determined to make progress in this field. One of the keynotes I was most excited about was “Sensory Interventions: Real-time integration of passive sensing and adaptive passive interventions” by Prof. Tanzeem Choudhury from Cornell Tech. While I had high expectations for this presentation, I must admit I left feeling a bit disappointed. The speaker only briefly touched upon the subject and didn’t delve into the detailed or advanced technologies I was hoping to learn more about. However, I understand that this is often the nature of a conference keynote During the Q&amp;A session, I asked whether heart rate was the only parameter they used to assess emotion and whether they had considered any invasive sensing methods. The answer was “yes” and “no.” I couldn’t help but think about how deep brain stimulation (DBS) surgery has already been verified as a promising approach to treating depression [1]. To me, it seems like DBS represents the gold standard for addressing emotional disorders. By comparison, their team’s non-invasive approach, relying solely on heart rate, initially felt overly simplistic and limited. However, after reflecting on it, I realized their method has its merits. For cases that are not treatment-resistant depression, why not explore simpler, non-invasive ways to address the problem? If it works, it could be an accessible and practical solution for many people. Interestingly, this aligns with what I aim to achieve for diabetic patients—finding effective, non-invasive methods to improve their quality of life. Reference [1] Scangos, K.W., Khambhati, A.N., Daly, P.M. et al. Closed-loop neuromodulation in an individual with treatment-resistant depression. Nat Med 27, 1696–1700 (2021). https://doi-org.kuleuven.e-bronnen.be/10.1038/s41591-021-01480-w.","link":"/2024/12/28/Regulating-Emotions-Invasive-or-Non-invasive/"},{"title":"ML-Ch2-P1-End to End Machine Learning Project","text":"🌟 IntroductionWelcome to this exciting chapter! 🎉 In this blog, I’ll work through an end-to-end machine learning project, turning raw data into actionable insights and a working model. Follow these structured steps to tackle any ML problem confidently. 🚀 The Roadmap: Steps to Build a Machine Learning ProjectHere’s are the main steps: 🗺️ Look at the Big Picture 📥 Get the Data 🔍 Explore and Visualize the Data to Gain Insights 🛠️ Prepare the Data for Machine Learning Algorithms 🤖 Select a Model and Train It 🎯 Fine-Tune the Model 🧾 Present the Solution 🛡️ Launch, Monitor, and Maintain the System 🌐 Working with Real DataTo work on real-world problems, you’ll need real data. Here’s where to find it: 🌟 Popular Open Data Repositories: 🌍 OpenML.org 📊 Kaggle.com 📚 PapersWithCode.com 🏫 UC Irvine Machine Learning Repository ☁️ Amazon AWS Datasets 🧠 TensorFlow Datasets 🔗 Meta Portals (they list open data repositories): 🌐 DataPortals.org 🔍 OpenDataMonitor.eu 💡 Other Pages Listing Popular Open Data Repositories: 📖 Wikipedia’s List of Machine Learning Datasets 💬 Quora Discussions on Datasets 🗨️ The Datasets Subreddit 🧩 Step 1: Look at the Big PictureTask: Use California census data to build a model predicting housing prices in the state.Data: The dataset includes metrics such as population, median income, and median housing prices for each block group in California. 🧠 Frame the Problem: 🔒 Type: Supervised learning 📈 Goal: Regression task (multiple regression and univariate regression) 💻 Approach: Batch learning 📊 Select a Performance Measure:A common performance measure for regression problems is the Root Mean Square Error (RMSE): $$\\text{RMSE}(\\mathbf{X}, \\mathit{h}) = \\sqrt{\\frac{1}{m} \\sum_{i=1}^m \\left(h(\\mathbf{x}^{(i)}) - y^{(i)}\\right)^2}$$ Check the AssumptionsFor example, what kind of machine learning system you would like your data to be fed into, a classification or regression system? 🛠️ Step 2: Get the Data1234567891011121314from pathlib import Pathimport pandas as pdimport tarfileimport urllib.requestdef load_housing_data(): tarball_path = Path(&quot;Datasets/housing.tgz&quot;) if not tarball_path.is_file(): Path(&quot;datasets&quot;).mkdir(parents=True, exist_ok=True) url = &quot;https://github.com/ageron/data/raw/main/housing.tgz&quot; urllib.request.urlretrieve(url, tarball_path) with tarfile.open(tarball_path) as housing_tarball: housing_tarball.extractall(path=&quot;datasets&quot;) return pd.read_csv(Path(&quot;datasets/housing/housing.csv&quot;)) Question for myself:The author mentions that there are 20,640 instances in the dataset. While this may seem small by machine learning standards, it’s perfect for getting started. How can we determine whether a dataset is “small” or not? Get a feel of the type of the data!!! using methods 123456789101112131415161718192021housing = load_housing_data()housing.head()housing.info()&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 20640 entries, 0 to 20639Data columns (total 10 columns): # Column Non-Null Count Dtype--- ------ -------------- ----- 0 longitude 20640 non-null float64 1 latitude 20640 non-null float64 2 housing_median_age 20640 non-null float64 3 total_rooms 20640 non-null float64 4 total_bedrooms 20433 non-null float64 5 population 20640 non-null float64 6 households 20640 non-null float64 7 median_income 20640 non-null float64 8 median_house_value 20640 non-null float64 9 ocean_proximity 20640 non-null objectdtypes: float64(9), object(1)memory usage: 1.6+ MB 12345678910&gt;&gt;&gt; housing[&quot;ocean_proximity&quot;].value_counts()ocean_proximity&lt;1H OCEAN 9136INLAND 6551NEAR OCEAN 2658NEAR BAY 2290ISLAND 5Name: count, dtype: int64&gt;&gt;&gt; housing.describe() output: 1234567891011 longitude latitude housing_median_age ... households median_income median_house_valuecount 20640.000000 20640.000000 20640.000000 ... 20640.000000 20640.000000 20640.000000mean -119.569704 35.631861 28.639486 ... 499.539680 3.870671 206855.816909std 2.003532 2.135952 12.585558 ... 382.329753 1.899822 115395.615874min -124.350000 32.540000 1.000000 ... 1.000000 0.499900 14999.00000025% -121.800000 33.930000 18.000000 ... 280.000000 2.563400 119600.00000050% -118.490000 34.260000 29.000000 ... 409.000000 3.534800 179700.00000075% -118.010000 37.710000 37.000000 ... 605.000000 4.743250 264725.000000max -114.310000 41.950000 52.000000 ... 6082.000000 15.000100 500001.000000[8 rows x 9 columns] plotting histograms 1234import matplotlib.pyplot as plthousing.hist(bins=50, figsize=(12, 8))plt.show() Figure 1: This figure shows the distribution of housing prices in California, with data grouped by region and income levels. Create a test setCreating a test set is theoretically simple; pick some instances randomly, typically 20% of the dataset (or less if your dataset is very large), and set them aside: 123456def shuffle_and_split_data(data, test_ratio): shuffled_indices = np.random.permutation(len(data)) test_set_size = int(len(data) * test_ratio) test_indices = shuffled_indices[:test_set_size] train_indices = shuffled_indices[test_set_size:] return data.iloc[train_indices], data.iloc[test_indices] then we can use the function to get the test set: 12345&gt;&gt;&gt; train_set, test_set = shuffle_and_split_data(housing, 0.2)&gt;&gt;&gt; len(train_set)16512&gt;&gt;&gt; len(test_set)4128 the problem is: once we run the program again, it will generate a different test set. Over time, we will get to see the whole dataset.solution: to save the test set on the first run and then load it in subsequent runs. to set the random number generator’s seed (using np.random.seed(42)) before calling np.random.permutation() so it always generates the same shuffled indices.another problem comes: above solutions will break the next time we fetch an updated dataset.solution: to have a stable train/test split even after updating the dataset, a common solution is to use each instance’s identifier to decide whether or not it should go in the test set. For example, to compute a hash of each instance’s identifier and put that instance in the test set if the hash is lower than or equal to 20% of the maximum hash value. This ensures that the test set will remain consistent across multiple runs, even if we refresh the dataset. 123456789from zlib import crc32def is_id_in_test_set(identifier, test_ratio): return crc32(np.int64(identifier)) &lt; test_ratio * 2**32def split_data_with_id_hash(data, test_ratio, id_column): ids = data[id_column] in_test_set = ids.apply(lambda id_: is_id_in_test_set(id_, test_ratio)) return data.loc[~in_test_set], data.loc[in_test_set] Scikit-Learn provides a few functions to split datasets into multiple subsets in various ways. The simplest function is train_test_split(), which does pretty much the same thing as the shuffle_and_split_data() function. there is a random_state parameter that allows us to set the random generator seed we can pass it multiple datasets with an identical number of rows, and it will split them on the same indices123from sklearn.model_selection import train_test_splittrain_set, test_set = train_test_split(housing, test_size = 0.2, random_state=42) How to avoid sampling bias? we should not have too many strata, and each stratum should be large enoughe.g. some experts told us that the median income is a very important attribute to predict median housing prices then we want to ensure that the test set is representative of the various categories of incomes in the whole dataset so we try to categories the datamethod 1: 12345678housing[&quot;income_cat&quot;] = pd.cut(housing[&quot;median_income&quot;], bins=[0., 1.5, 3.0, 4.5, 6., np.inf], labels=[1, 2, 3, 4, 5]) housing[&quot;income_cat&quot;].value_counts().sort_index().plot.bar(rot=0, grid=True)plt.xlabel(&quot;Income category&quot;)plt.ylabel(&quot;Number of districts&quot;)plt.show() Figure 2: Histogram of income categories using pd. method 2: using multiple splits 12345678from sklearn.model_selection import StratifiedShuffleSplitsplitter = StratifiedShuffleSplit(n_splits=10, test_size=0.2, random_state=42)strat_splits = []for train_index, test_index in splitter.split(housing, housing[&quot;income_cat&quot;]): strat_train_set_n = housing.iloc[train_index] strat_test_set_n = housing.iloc[test_index] strat_splits.append([strat_train_set_n, strat_test_set_n]) we can just the first split 12strat_train_set, strat_test_set = strat_splits[0] then 12345678&gt;&gt;&gt; strat_test_set[&quot;income_cat&quot;].value_counts() / len(strat_test_set)income_cat3 0.3505332 0.3187984 0.1763575 0.1143411 0.039971Name: count, dtype: float64 🔎 Step 3: Explore and Visualize the Data to Gain Insights 🧑‍💻 Step 4: Prepare the Data for Machine Learning Algorithms 🤖 Step 5: Select a Model and Train It(Details to be added as necessary.) 🎯 Step 6: Fine-Tune the Model(Details to be added as necessary.) 📋 Step 7: Present the Solution(Details to be added as necessary.) 🚀 Step 8: Launch, Monitor, and Maintain the System(Details to be added as necessary.)","link":"/2025/01/03/ML-Ch2-P1-End-to-End-Machine-Learning-Project/"},{"title":"There is no diabetic foot in heaven","text":"Today, I learned that my landlord’s mom underwent euthanasia. It left me reflecting on a conversation we had not long ago. It was a typical day when I returned to my studio and stopped by my landlord’s place to pick up a package. We started chatting casually, and he asked me, “Why do you always work so late, Emily?” I laughed and replied, “Well, probably because I’m not that smart.” As the conversation flowed, I shared details about my project. He seemed genuinely intrigued and, in turn, shared a deeply personal story about his mother. She had been diagnosed with diabetic foot several years ago. From what I know, the prognosis is grim once diabetic foot is discovered. It’s often already too late for effective treatment. His mother was over 90 years old, making surgery an impossible option. He mentioned that the family was considering euthanasia for her. I was surprised to learn that euthanasia is legal in Belgium. It’s a humane option for those suffering, but hearing it from someone I know gave me a new perspective on its profound impact. I never thought the day he mentioned would come so soon. And yet, here we are.","link":"/2025/01/20/There-is-no-diabetic-foot-in-heaven/"},{"title":"Vriend of Vriendin? Dutch is interesting!","text":"Language learning is an adventure full of surprises, and Dutch has been no exception for me. During a casual conversation in class yesterday, I stumbled upon an amusing linguistic quirk that left me both puzzled and entertained. Here’s what happened: 💬 Classmate A: Hoe oefen je Nederlands??(How do you practice your Dutch?) 🧑‍🎓 Me: Ik oefen Nederlands met mijn vrienden.(I practice it with my friends.) 👩‍🎓 Classmate B: Een man of een vrouw?(A man or a woman?) 🤔 Me: They are just my friends. Why does the gender matter? 💡 Classmate B: Ah, but in Dutch, “vriend” or “vriendin” often means boyfriend or girlfriend! Curious about this, I asked our teacher:👩‍🏫 Me: Is there any way to express a “normal friend”? Our teacher, a very kind lady, paused to think. After a moment, she smiled and said:“Emm, good question. But no, there is no ‘normal friend’ in Dutch. When we say ‘vriend’ or ‘vriendin,’ it usually refers to romantic relationships. 😊” This little exchange made me realize just how fascinating and nuanced languages can be. 🧠✨ As a learner, these moments of cultural insight are both challenging and rewarding. 🌍✍️ Update:My local colleague explained that using the plural form “vrienden” is perfectly fine and simply means “friends.” However, using “mijn vriend” or “mijn vriendin” typically implies a romantic relationship.","link":"/2025/01/10/Vriend-of-Vriendin-Dutch-is-interesting/"},{"title":"Why do we need to pay Brussels Airport Supplement?","text":"Public transportation in China is incredibly affordable. For instance, taking the subway in Shanghai typically costs only 4 to 6 RMB (approximately €0.5 to €0.8). That’s pocket change! 🤑 As someone used to this cost-efficiency, traveling in Belgium, or any other European country, feels like public transport is reaching directly into my wallet! 😂💸 The Brussels Airport Supplement: My “Door Shock” Moment 🚪😱So, imagine my reaction when I discovered the infamous Brussels Airport Supplement! I was shocked to learn that I needed to buy an additional ticket just to access the airport via train. That’s right, this isn’t about your regular train fare; it’s an extra charge simply to go through the “airport door.” 🤑 Talk about an expensive entrance fee! 😬✈️ Screenshot of the SNCB supplement ticket. Why Is There a Supplement? 💡After some digging, I discovered that this charge is linked to the Diabolo Project, which simplifies train connections to Brussels Airport for people in cities like Antwerp, Leuven, and Namur. Here’s how it works: Public/Private Partnership: The Diabolo Project is funded by Northern Diabolo NV through a public-private model. User-Pays Principle: The cost of this project is passed directly to passengers who use it, via a supplement added to your train ticket. Good News for Non-Users: If you don’t take the train to the airport, you don’t have to pay for this infrastructure. Fair enough, right? 🤔 You can read more about the supplement on the SNCB portal. The China Difference 🇨🇳💰🚇In contrast, public transportation in China operates on a heavily subsidized model, making it accessible to everyone. Whether you’re a daily commuter or an occasional traveler, the government ensures that public transport remains affordable and inclusive. For example: Subsidized Infrastructure: Massive investments in metro systems don’t directly impact ticket prices. Flat or Low Pricing: Even premium routes like airport express trains cost far less compared to European standards. A Global Perspective 🌍Interestingly, similar supplement tickets exist at other airports worldwide, such as Copenhagen Airport, Frankfurt Airport, and Oslo Airport. These charges are often justified by specific infrastructure projects or enhancements aimed at improving airport connectivity. If I get the chance to travel more, I’d love to explore how these systems compare! ✈️🛤️ While the user-pays model in Belgium is logical, it ensures that only those who use the service cover its costs, it contrasts sharply with China’s government-funded approach. Each has its merits, but I must admit, my wallet definitely misses China’s affordable transport! 😅💼 One question lingers in my mind: if projects like Diabolo earn enough money over time, for example, after ten years, when ticket revenue covers the project’s expenses, will they still charge the supplement? Or will it be removed? 🫣🫣","link":"/2025/01/13/Why-do-we-need-to-pay-Brussels-Airport-Supplement/"}],"tags":[{"name":"PDMS","slug":"PDMS","link":"/tags/PDMS/"},{"name":"Graphene","slug":"Graphene","link":"/tags/Graphene/"},{"name":"Materials","slug":"Materials","link":"/tags/Materials/"},{"name":"3D-Printed","slug":"3D-Printed","link":"/tags/3D-Printed/"},{"name":"PressureSensor","slug":"PressureSensor","link":"/tags/PressureSensor/"},{"name":"SJTU","slug":"SJTU","link":"/tags/SJTU/"},{"name":"Hydrogel","slug":"Hydrogel","link":"/tags/Hydrogel/"},{"name":"Soft Robotics","slug":"Soft-Robotics","link":"/tags/Soft-Robotics/"},{"name":"Cryogenic Printing","slug":"Cryogenic-Printing","link":"/tags/Cryogenic-Printing/"},{"name":"Nature Communications","slug":"Nature-Communications","link":"/tags/Nature-Communications/"},{"name":"Multimaterial Printing","slug":"Multimaterial-Printing","link":"/tags/Multimaterial-Printing/"},{"name":"morning_flowers","slug":"morning-flowers","link":"/tags/morning-flowers/"},{"name":"Machine Learning","slug":"Machine-Learning","link":"/tags/Machine-Learning/"},{"name":"Hands-On Machine Learning","slug":"Hands-On-Machine-Learning","link":"/tags/Hands-On-Machine-Learning/"},{"name":"wearable devices","slug":"wearable-devices","link":"/tags/wearable-devices/"},{"name":"questions","slug":"questions","link":"/tags/questions/"},{"name":"depression","slug":"depression","link":"/tags/depression/"},{"name":"conferences","slug":"conferences","link":"/tags/conferences/"},{"name":"diabetic foot","slug":"diabetic-foot","link":"/tags/diabetic-foot/"},{"name":"euthanasia","slug":"euthanasia","link":"/tags/euthanasia/"},{"name":"Belgium","slug":"Belgium","link":"/tags/Belgium/"},{"name":"motivation","slug":"motivation","link":"/tags/motivation/"},{"name":"Bruges","slug":"Bruges","link":"/tags/Bruges/"},{"name":"Dutch","slug":"Dutch","link":"/tags/Dutch/"},{"name":"Interesting Things","slug":"Interesting-Things","link":"/tags/Interesting-Things/"},{"name":"Brussels","slug":"Brussels","link":"/tags/Brussels/"},{"name":"culture difference","slug":"culture-difference","link":"/tags/culture-difference/"}],"categories":[{"name":"literatureReview","slug":"literatureReview","link":"/categories/literatureReview/"},{"name":"articles","slug":"articles","link":"/categories/articles/"},{"name":"keeplearning","slug":"keeplearning","link":"/categories/keeplearning/"}],"pages":[{"title":"Introduction","text":"“Every person’s life is a journey toward himself, the attempt at a journey, the intimation of a path. No person has ever been completely himself, but each one strives to become so, some gropingly, others more lucidly, according to his abilities.” — Hermann Hesse, Demian Who am IHi, I’m PENG Sai (彭赛), and I also go by my English name, Emily, which I chose back in middle school. I’m a Ph.D. researcher at KU Leuven in Belgium, exploring topics like embedded systems, wearable devices, smart sensors, and soft robotics. My ultimate goal is to develop technologies that make a real difference in healthcare and rehabilitation. Before embarking on my Ph.D. journey, I worked at Microsoft and Micron. Back then, I felt like a ship adrift, chasing milestones like earning money, getting married, buying a house, and climbing the career ladder, but without a true sense of purpose. The COVID-19 lockdown gave me the time to work from home and reflect on life’s bigger questions. It was during this period that I decided to pursue a Ph.D. Witnessing the struggles of a loved one battling cancer and the many heartbreaking stories I encountered at the hospital further solidified my resolve to contribute meaningfully to the world. Why this siteI’ve been blogging since 2012, starting on CSDN, then transitioning to a Chinese public account, and eventually to GitHub. Writing has always been a personal joy for me, a way to document my thoughts and, with luck, connect with others who share similar interests. This site serves a few key purposes: Showcasing my independent research and its outcomes Documenting my personal achievements Highlighting the challenges I aim to tackle Exploring and discussing wearable and smart devices, along with their real-world applications I may not have the answer to life’s ultimate question, but I know I’m on a journey that brings me fulfillment. That’s a good start.","link":"/index.html"},{"title":"Publications","text":"Journals 9. Recent Advances in 3-D Printed, Wearable Pressure Sensors for Plantar Pressure Monitoring: A ReviewAuthors: Sai Peng; Hytham Hassan; Stijn Rosseel; Giovanni A. Matricali; Kevin Deschamps; Veerle Vandeginste; Hans Hallez.Journal: IEEE Sensors Journal, 2024 8. Scalable processing ultrathin polymer dielectric films with a generic solution based approach for wearable soft electronicsAuthors: Sujie Chen; Sai Peng; Wenjian Sun; Guoying Gu; Qing Zhang; Xiaojun Guo.Journal: Advanced Materials Technologies, 2019 7. Integrated Soft Ionotronic Skin with Stretchable and Transparent Hydrogel-Elastomer Ionic Sensors for Hand-Motion MonitoringAuthors: Guoying Gu; Haipeng Xu; Sai Peng; Ling Li; Sujie Chen; Tongqing Lu; Xiaojun Guo.Journal: SOFT ROBOTICS, 2019 6. High Sensitivity Capacitive Pressure Sensor With Bi-Layer Porous Structure Elastomeric Dielectric Formed by a Facile Solution Based ProcessAuthors: Sai Peng; Sujie Chen; Yukun Huang; Shuai Pei; Xiaojun Guo.Journal: IEEE SENSORS LETTERS, 2019 5. Integrated Low Voltage Ion Sensing Organic Field Effect Transistor System on PlasticAuthors: Qiaofeng Li; Jiaqing Zhao; Yukun Huang; Wei Tang; Sai Peng; Shi Qiu; Qiuqi Zhang; Xiaojun Guo.Journal: IEEE ELECTRON DEVICE LETTERS, 2018 4. Silver Nanowire Mesh-Based Fuse Type Write-Once-Read-Many MemoryAuthors: Luyao Zhu; Sujie Chen; Haoyu Zhou; Sai Peng; Qiuqi Zhang; Xiachang Zhang; Xiaojun Guo.Journal: IEEE ELECTRON DEVICE LETTERS, 2018 3. Improved Sensitivity of Inkjet-Printed PEDOT:PSS Ammonia Sensor With “Nonideal” MorphologyAuthors: Siying Li; Yuanzhe Li; Sujie Chen; Wei Tang; Yukun Huang; Sai Peng; Jianrong Qi; Xiaojun Guo.Journal: IEEE SENSORS LETTERS, 2018 2. Silver nanowire/polymer composite soft conductive film fabricated by large-area compatible coating for flexible pressure sensor arrayAuthors: Sujie Chen, Siying Li, Sai Peng, Yukun Huang, Jiaqing Zhao, Wei Tang and Xiaojun GuoJournal: JOURNAL OF SEMICONDUCTORS, 2018 1. Stable Thin-Film Reference Electrode on Plastic Substrate for All-Solid-State Ion-Sensitive Field-Effect Transistor Sensing SystemAuthors: Qiaofeng Li; Wei Tang; Yuezeng Su; Yukun Huang; Sai Peng; Bengang Zhuo; Shi Qiu; Li Ding; Yuanzhe Li; Xiaojun Guo.Journal: IEEE ELECTRON DEVICE LETTERS, 2017 Conferences 1. Wireless Readout System for Pressure Monitoring Using FFF-Printed Mold Fabricated Flexible Piezoresistive SensorsAuthors: Sai Peng; Arthur Camelbeke; Kevin Deschamps; Veerle Vandeginste; Hans HallezConference: 2024 IEEE SENSORS, 2024","link":"/publications/index.html"},{"title":"","text":"/* 调整页面主要内容和侧边栏的宽度 */ .page-main { width: calc(100% - 200px); /* 主内容区域宽度，200px 是侧边栏宽度 */ max-width: none; /* 取消最大宽度限制 */ margin: 0 auto; box-sizing: border-box; /* 包含 padding 和 border */ } .site-title { font-size: 36px; font-weight: bold; text-align: center; font-family: 'Arial', sans-serif; /* Change the font-family */ color: #333333; /* 标题颜色 */ text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1); /* 添加阴影 */ border-bottom: 2px solid #ddd; /* 底部划线 */ padding-bottom: 10px; /* 调整下边距 */ margin-bottom: 20px; /* 与正文保持间距 */ } .sidebar { width: 200px; /* 侧边栏宽度 */ box-sizing: border-box; /* 包含 padding 和 border */ } /* 调整整体布局 */ .content-wrapper { display: flex; max-width: 1400px; /* 整体页面宽度 */ margin: 0 auto; /* 居中对齐 */ flex-wrap: wrap; /* 使布局元素在较小的屏幕上换行 */ padding: 0 15px; /* 为整个页面提供一些内边距 */ } /* Flexbox布局：主内容和侧边栏 */ .content-wrapper .page-main { flex: 1; /* 主内容占据剩余空间 */ } .content-wrapper .sidebar { flex: 0 0 200px; /* 侧边栏保持固定宽度 */ } /* 响应式调整：在较小屏幕时恢复默认布局 */ @media (max-width: 768px) { .content-wrapper { flex-direction: column; /* 使主内容和侧边栏垂直排列 */ } .page-main { width: 100%; /* 主内容占满屏幕 */ padding: 0 15px; /* 增加左右留白 */ } .sidebar { width: 100%; /* 侧边栏宽度随屏幕变化 */ margin-bottom: 20px; /* 增加侧边栏下方留白 */ } .post-title, h1 { font-size: 2em; /* 缩小字体大小以适应小屏幕 */ } .site-title { font-size: 28px; /* 缩小标题字体大小 */ } } /* Target the main content container */ .main-content, .content, .post { width: 90%; /* Make the content container 90% of the viewport width */ max-width: none; /* Remove any max-width restriction */ margin: 0 auto; /* Center the content */ padding: 20px; /* Add padding around the content */ } /* If the content is inside another container, like a wrapper, adjust it as well */ .wrapper { width: 100%; max-width: 1200px; /* Set a max width for very large screens */ margin: 0 auto; } /* Adjusting for smaller screens */ @media (max-width: 768px) { .main-content, .content, .post { width: 100%; /* Make sure the content takes up full width on small screens */ padding: 10px; /* Reduce padding on smaller screens */ } }","link":"/css/custom.css"}]}